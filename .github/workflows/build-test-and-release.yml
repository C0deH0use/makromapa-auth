name: Build & Test

on:
  push:
    branches: [ master, test ]

jobs:
  build:
    name: build changes
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: 'gradle'
    - name: Build without tests
      uses: gradle/gradle-build-action@v2
      with:
        arguments: clean build -x test

    - uses: actions/upload-artifact@v2
      with:
        name: build-artifactory
        path: build/
        retention-days: 1

  unit-test:
    name: test changes
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: 'actions/checkout@v2'
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'
      - uses: 'actions/download-artifact@v2'

      - name: Run Unit Tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres_db:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: makromapa-db-dev
          POSTGRES_USER: makromapa-auth-user
          POSTGRES_PASSWORD: mysecretpassword

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: 'actions/checkout@v2'
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'
      - uses: 'actions/download-artifact@v2'

      - name: Run Integration Tests
        uses: gradle/gradle-build-action@v2
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://127.0.0.1:5432/makromapa-db-dev
        with:
          arguments: integrationTest -Pprofiles=integrationTest,cicd

  build-push-docker:
    name: build and push docker image to GCP Repository
    runs-on: ubuntu-latest
    needs: [integration-tests, unit-test]

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: 'actions/checkout@v2'

      - uses: 'actions/download-artifact@v2'
        with:
          name: build-artifactory
          path: build/

      - uses: madhead/read-java-properties@latest
        id: version
        with:
          file: gradle.properties
          property: version
          default: 0.0.1

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.GPC_SERVICE_ACCOUNT }}'

      - id: 'docker-login'
        run: "gcloud auth configure-docker"

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: "Build Docker Image"
        run: |-
          PROJECT_ID="${{ secrets.GCP_PROJECT_ID }}"
          echo "Project: $PROJECT_ID" ${{ steps.version.outputs.value }}
          docker build \
            --tag "gcr.io/$PROJECT_ID/makromapa-auth:${{ steps.version.outputs.value }}-${GITHUB_SHA::7}" \
            --build-arg COMMIT_SHA=${GITHUB_SHA::7} \
            .

      - name: "Push the Docker image to Google Container Registry"
        run: |-
          PROJECT_ID="${{ secrets.GCP_PROJECT_ID }}"
          docker push "gcr.io/$PROJECT_ID/makromapa-auth:${{ steps.version.outputs.value }}-${GITHUB_SHA::7}"

#  update-chart-repository:
#    name: Update Helm Template with new version
#    runs-on: ubuntu-latest
#      #    needs: [integration-tests, unit-test]
#      needs: [ Publish ]
#
#      steps:
#        - uses: 'actions/checkout@v2'
#
#        - uses: 'actions/download-artifact@v2'
#            with:
#              name: build-artifactory
#              path: build/
#
#        - uses: madhead/read-java-properties@latest
#          id: version
#          with:
#            file: gradle.properties
#            property: version
#            default: 0.0.1